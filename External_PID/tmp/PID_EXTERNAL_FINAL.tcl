#*****************************************************************************************
# Vivado (TM) v2022.1 (64-bit)
#
# PID_EXTERNAL_FINAL.tcl: Tcl script for re-creating project 'PID_EXTERNAL_FINAL'
#
# Generated by Vivado on Fri Sep 15 11:39:13 +0100 2023
# IP Build 3524634 on Mon Apr 18 20:55:01 MDT 2022
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (PID_EXTERNAL_FINAL.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Low_pass_Filter.v"
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Scan.v"
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Voltage_Holder.v"
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Signal_Split.v"
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Divider.v"
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Signal_Split_2.v"
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Data_b_Pack.v"
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Add.v"
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/PID_Inputs_Pack.v"
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/LED_Controller.v"
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Selector.v"
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Ramp.v"
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/PID_Controller.v"
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Scale.v"
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/B_data_select.v"
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Square_Wave.v"
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/External_Inputs.v"
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/imports/system_wrapper.v"
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/CPU_Signal.v"
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Division_Correction.v"
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Hivemind.v"
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Latch.v"
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/PID_Hold.v"
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Selector_2.v"
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Hold_Config.v"
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Add_Step.v"
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/constrs_1/imports/cfg/clocks.xdc"
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/constrs_1/imports/cfg/ports.xdc"
#    "C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/utils_1/imports/synth_1/system_wrapper.dcp"
#
# 3. The following remote source files that were added to the original project:-
#
#    <none>
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Low_pass_Filter.v"]"\
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Scan.v"]"\
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Voltage_Holder.v"]"\
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Signal_Split.v"]"\
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Divider.v"]"\
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Signal_Split_2.v"]"\
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Data_b_Pack.v"]"\
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Add.v"]"\
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/PID_Inputs_Pack.v"]"\
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/LED_Controller.v"]"\
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Selector.v"]"\
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Ramp.v"]"\
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/PID_Controller.v"]"\
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Scale.v"]"\
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/B_data_select.v"]"\
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Square_Wave.v"]"\
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/External_Inputs.v"]"\
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/imports/system_wrapper.v"]"\
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/CPU_Signal.v"]"\
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Division_Correction.v"]"\
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Hivemind.v"]"\
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Latch.v"]"\
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/PID_Hold.v"]"\
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Selector_2.v"]"\
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Hold_Config.v"]"\
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Add_Step.v"]"\
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/constrs_1/imports/cfg/clocks.xdc"]"\
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/constrs_1/imports/cfg/ports.xdc"]"\
 "[file normalize "$origin_dir/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/utils_1/imports/synth_1/system_wrapper.dcp"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find local file $ifile "
      set status false
    }
  }

  set paths [list \
   [file normalize "$origin_dir/../../Complete_setup/tmp/cores"] \
  ]
  foreach ipath $paths {
    if { ![file isdirectory $ipath] } {
      puts " Could not access $ipath "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "PID_EXTERNAL_FINAL"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "PID_EXTERNAL_FINAL.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/PID_EXTERNAL_FINAL"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7z010clg400-1

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_resource_estimation" -value "0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xc7z010clg400-1" -objects $obj
set_property -name "revised_directory_structure" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set IP repository paths
set obj [get_filesets sources_1]
if { $obj != {} } {
   set_property "ip_repo_paths" "[file normalize "$origin_dir/../../Complete_setup/tmp/cores"]" $obj

   # Rebuild user ip_repo's index before adding any source files
   update_ip_catalog -rebuild
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Low_pass_Filter.v"]\
 [file normalize "${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Scan.v"]\
 [file normalize "${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Voltage_Holder.v"]\
 [file normalize "${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Signal_Split.v"]\
 [file normalize "${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Divider.v"]\
 [file normalize "${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Signal_Split_2.v"]\
 [file normalize "${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Data_b_Pack.v"]\
 [file normalize "${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Add.v"]\
 [file normalize "${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/PID_Inputs_Pack.v"]\
 [file normalize "${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/LED_Controller.v"]\
 [file normalize "${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Selector.v"]\
 [file normalize "${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Ramp.v"]\
 [file normalize "${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/PID_Controller.v"]\
 [file normalize "${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Scale.v"]\
 [file normalize "${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/B_data_select.v"]\
 [file normalize "${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Square_Wave.v"]\
 [file normalize "${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/External_Inputs.v"]\
 [file normalize "${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/imports/system_wrapper.v"]\
 [file normalize "${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/CPU_Signal.v"]\
 [file normalize "${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Division_Correction.v"]\
 [file normalize "${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Hivemind.v"]\
 [file normalize "${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Latch.v"]\
 [file normalize "${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/PID_Hold.v"]\
 [file normalize "${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Selector_2.v"]\
 [file normalize "${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Hold_Config.v"]\
 [file normalize "${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Add_Step.v"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "system_wrapper" -objects $obj
set_property -name "verilog_define" -value "TOOL_VIVADO" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize ${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/constrs_1/imports/cfg/clocks.xdc]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "cfg/clocks.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize ${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/constrs_1/imports/cfg/ports.xdc]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "cfg/ports.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_part" -value "xc7z010clg400-1" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "system_wrapper" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/utils_1/imports/synth_1/system_wrapper.dcp"]\
]
set imported_files [import_files -fileset utils_1 $files]

# Set 'utils_1' fileset file properties for remote files
# None

# Set 'utils_1' fileset file properties for local files
set file "synth_1/system_wrapper.dcp"
set file_obj [get_files -of_objects [get_filesets utils_1] [list "*$file"]]
set_property -name "netlist_only" -value "0" -objects $file_obj


# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added
if { [get_files Low_pass_Filter.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Low_pass_Filter.v
}
if { [get_files Scan.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Scan.v
}
if { [get_files Voltage_Holder.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Voltage_Holder.v
}
if { [get_files Signal_Split.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Signal_Split.v
}
if { [get_files Voltage_Holder.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Voltage_Holder.v
}
if { [get_files Divider.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Divider.v
}
if { [get_files Signal_Split_2.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Signal_Split_2.v
}
if { [get_files Signal_Split.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Signal_Split.v
}
if { [get_files Signal_Split_2.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Signal_Split_2.v
}
if { [get_files Signal_Split_2.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Signal_Split_2.v
}
if { [get_files Data_b_Pack.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Data_b_Pack.v
}
if { [get_files Add.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Add.v
}
if { [get_files Signal_Split_2.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Signal_Split_2.v
}
if { [get_files PID_Inputs_Pack.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/PID_Inputs_Pack.v
}
if { [get_files LED_Controller.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/LED_Controller.v
}
if { [get_files Selector.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Selector.v
}
if { [get_files Ramp.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Ramp.v
}
if { [get_files PID_Controller.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/PID_Controller.v
}
if { [get_files Scale.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Scale.v
}
if { [get_files B_data_select.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/B_data_select.v
}
if { [get_files Add.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Add.v
}
if { [get_files Square_Wave.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Square_Wave.v
}
if { [get_files Signal_Split_2.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/Signal_Split_2.v
}
if { [get_files External_Inputs.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/BenMillward/Desktop/External_PID/tmp/PID_EXTERNAL_FINAL/PID_EXTERNAL_FINAL.srcs/sources_1/new/External_Inputs.v
}


# Proc to create BD system
proc cr_bd_system { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# Add, Add, B_Select, Data_b_Pack, External_Digital_Inputs, LED_Contoller, PID_Inputs_Pack, PI_ctrl, Ramp, Scan, Selector, Square_Wave, Voltage_Holder, Voltage_Holder, divider, low_pass, scale, signal_split, signal_split, signal_split_2, signal_split_2, signal_split_2, signal_split_2, signal_split_2



  # CHANGE DESIGN NAME HERE
  set design_name system

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:axi_gpio:2.0\
  pavel-demin:user:axis_red_pitaya_dac:1.0\
  xilinx.com:ip:processing_system7:5.5\
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:ip:util_ds_buf:2.2\
  xilinx.com:ip:util_vector_logic:2.0\
  pavel-demin:user:axis_red_pitaya_adc:1.0\
  xilinx.com:ip:clk_wiz:6.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  Add\
  Add\
  B_Select\
  Data_b_Pack\
  External_Digital_Inputs\
  LED_Contoller\
  PID_Inputs_Pack\
  PI_ctrl\
  Ramp\
  Scan\
  Selector\
  Square_Wave\
  Voltage_Holder\
  Voltage_Holder\
  divider\
  low_pass\
  scale\
  signal_split\
  signal_split\
  signal_split_2\
  signal_split_2\
  signal_split_2\
  signal_split_2\
  signal_split_2\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: ADC
proc create_hier_cell_ADC { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_ADC() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS


  # Create pins
  create_bd_pin -dir I adc_clk_n_i
  create_bd_pin -dir I adc_clk_p_i
  create_bd_pin -dir O adc_csn_o
  create_bd_pin -dir I -from 13 -to 0 adc_dat_a_i
  create_bd_pin -dir I -from 13 -to 0 adc_dat_b_i
  create_bd_pin -dir O -type clk clk_in1
  create_bd_pin -dir O -type clk clk_out1
  create_bd_pin -dir O locked

  # Create instance: axis_red_pitaya_adc_0, and set properties
  set axis_red_pitaya_adc_0 [ create_bd_cell -type ip -vlnv pavel-demin:user:axis_red_pitaya_adc:1.0 axis_red_pitaya_adc_0 ]

  # Create instance: clk_wiz_0, and set properties
  set clk_wiz_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 clk_wiz_0 ]
  set_property -dict [ list \
   CONFIG.CLKIN1_JITTER_PS {80.0} \
   CONFIG.CLKOUT1_JITTER {104.759} \
   CONFIG.CLKOUT1_PHASE_ERROR {96.948} \
   CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {250} \
   CONFIG.CLKOUT1_REQUESTED_PHASE {157.5} \
   CONFIG.MMCM_CLKFBOUT_MULT_F {8.000} \
   CONFIG.MMCM_CLKIN1_PERIOD {8.000} \
   CONFIG.MMCM_CLKOUT0_DIVIDE_F {4.000} \
   CONFIG.MMCM_CLKOUT0_PHASE {157.500} \
   CONFIG.PRIM_IN_FREQ {125} \
   CONFIG.USE_RESET {false} \
 ] $clk_wiz_0

  # Create interface connections
  connect_bd_intf_net -intf_net axis_red_pitaya_adc_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_red_pitaya_adc_0/M_AXIS]

  # Create port connections
  connect_bd_net -net adc_clk_n_i_1 [get_bd_pins adc_clk_n_i] [get_bd_pins axis_red_pitaya_adc_0/adc_clk_n]
  connect_bd_net -net adc_clk_p_i_1 [get_bd_pins adc_clk_p_i] [get_bd_pins axis_red_pitaya_adc_0/adc_clk_p]
  connect_bd_net -net adc_dat_a_i_1 [get_bd_pins adc_dat_a_i] [get_bd_pins axis_red_pitaya_adc_0/adc_dat_a]
  connect_bd_net -net adc_dat_b_i_1 [get_bd_pins adc_dat_b_i] [get_bd_pins axis_red_pitaya_adc_0/adc_dat_b]
  connect_bd_net -net axis_red_pitaya_adc_0_adc_clk [get_bd_pins clk_in1] [get_bd_pins axis_red_pitaya_adc_0/adc_clk] [get_bd_pins clk_wiz_0/clk_in1]
  connect_bd_net -net axis_red_pitaya_adc_0_adc_csn [get_bd_pins adc_csn_o] [get_bd_pins axis_red_pitaya_adc_0/adc_csn]
  connect_bd_net -net clk_wiz_0_clk_out1 [get_bd_pins clk_out1] [get_bd_pins clk_wiz_0/clk_out1]
  connect_bd_net -net clk_wiz_0_locked [get_bd_pins locked] [get_bd_pins clk_wiz_0/locked]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set DDR [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:ddrx_rtl:1.0 DDR ]

  set FIXED_IO [ create_bd_intf_port -mode Master -vlnv xilinx.com:display_processing_system7:fixedio_rtl:1.0 FIXED_IO ]

  set Vaux0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux0 ]

  set Vaux1 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux1 ]

  set Vaux8 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux8 ]

  set Vaux9 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux9 ]

  set Vp_Vn [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vp_Vn ]


  # Create ports
  set adc_clk_n_i [ create_bd_port -dir I adc_clk_n_i ]
  set adc_clk_p_i [ create_bd_port -dir I adc_clk_p_i ]
  set adc_csn_o [ create_bd_port -dir O adc_csn_o ]
  set adc_dat_a_i [ create_bd_port -dir I -from 13 -to 0 adc_dat_a_i ]
  set adc_dat_b_i [ create_bd_port -dir I -from 13 -to 0 adc_dat_b_i ]
  set adc_enc_n_o [ create_bd_port -dir O adc_enc_n_o ]
  set adc_enc_p_o [ create_bd_port -dir O adc_enc_p_o ]
  set dac_clk_o [ create_bd_port -dir O dac_clk_o ]
  set dac_dat_o [ create_bd_port -dir O -from 13 -to 0 dac_dat_o ]
  set dac_pwm_o [ create_bd_port -dir O -from 3 -to 0 dac_pwm_o ]
  set dac_rst_o [ create_bd_port -dir O dac_rst_o ]
  set dac_sel_o [ create_bd_port -dir O dac_sel_o ]
  set dac_wrt_o [ create_bd_port -dir O dac_wrt_o ]
  set daisy_n_i [ create_bd_port -dir I -from 1 -to 0 daisy_n_i ]
  set daisy_n_o [ create_bd_port -dir O -from 1 -to 0 daisy_n_o ]
  set daisy_p_i [ create_bd_port -dir I -from 1 -to 0 daisy_p_i ]
  set daisy_p_o [ create_bd_port -dir O -from 1 -to 0 daisy_p_o ]
  set exp_n_tri_io [ create_bd_port -dir I -from 7 -to 0 exp_n_tri_io ]
  set exp_p_tri_io [ create_bd_port -dir I -from 7 -to 0 exp_p_tri_io ]
  set led_o [ create_bd_port -dir O -from 7 -to 0 led_o ]

  # Create instance: ADC
  create_hier_cell_ADC [current_bd_instance .] ADC

  # Create instance: Add_0, and set properties
  set block_name Add
  set block_cell_name Add_0
  if { [catch {set Add_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Add_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: Add_1, and set properties
  set block_name Add
  set block_cell_name Add_1
  if { [catch {set Add_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Add_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: B_Select_0, and set properties
  set block_name B_Select
  set block_cell_name B_Select_0
  if { [catch {set B_Select_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $B_Select_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: Data_b_Pack_0, and set properties
  set block_name Data_b_Pack
  set block_cell_name Data_b_Pack_0
  if { [catch {set Data_b_Pack_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Data_b_Pack_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: External_Digital_Inp_0, and set properties
  set block_name External_Digital_Inputs
  set block_cell_name External_Digital_Inp_0
  if { [catch {set External_Digital_Inp_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $External_Digital_Inp_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: LED_Contoller_0, and set properties
  set block_name LED_Contoller
  set block_cell_name LED_Contoller_0
  if { [catch {set LED_Contoller_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $LED_Contoller_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: PID_Inputs_Pack_0, and set properties
  set block_name PID_Inputs_Pack
  set block_cell_name PID_Inputs_Pack_0
  if { [catch {set PID_Inputs_Pack_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $PID_Inputs_Pack_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: PI_ctrl_0, and set properties
  set block_name PI_ctrl
  set block_cell_name PI_ctrl_0
  if { [catch {set PI_ctrl_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $PI_ctrl_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: Ramp_0, and set properties
  set block_name Ramp
  set block_cell_name Ramp_0
  if { [catch {set Ramp_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Ramp_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: Scan_0, and set properties
  set block_name Scan
  set block_cell_name Scan_0
  if { [catch {set Scan_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Scan_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: Selector_0, and set properties
  set block_name Selector
  set block_cell_name Selector_0
  if { [catch {set Selector_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Selector_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: Square_Wave_0, and set properties
  set block_name Square_Wave
  set block_cell_name Square_Wave_0
  if { [catch {set Square_Wave_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Square_Wave_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: Voltage_Holder_0, and set properties
  set block_name Voltage_Holder
  set block_cell_name Voltage_Holder_0
  if { [catch {set Voltage_Holder_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Voltage_Holder_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: Voltage_Holder_1, and set properties
  set block_name Voltage_Holder
  set block_cell_name Voltage_Holder_1
  if { [catch {set Voltage_Holder_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Voltage_Holder_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axi_gpio_0, and set properties
  set axi_gpio_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_0 ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {14} \
 ] $axi_gpio_0

  # Create instance: axi_gpio_1, and set properties
  set axi_gpio_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_1 ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {1} \
 ] $axi_gpio_1

  # Create instance: axi_gpio_2, and set properties
  set axi_gpio_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_2 ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {32} \
 ] $axi_gpio_2

  # Create instance: axi_gpio_3, and set properties
  set axi_gpio_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_3 ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {14} \
 ] $axi_gpio_3

  # Create instance: axi_gpio_4, and set properties
  set axi_gpio_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_4 ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {14} \
 ] $axi_gpio_4

  # Create instance: axi_gpio_5, and set properties
  set axi_gpio_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_5 ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {14} \
 ] $axi_gpio_5

  # Create instance: axi_gpio_6, and set properties
  set axi_gpio_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_6 ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {14} \
 ] $axi_gpio_6

  # Create instance: axi_gpio_7, and set properties
  set axi_gpio_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_7 ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {14} \
 ] $axi_gpio_7

  # Create instance: axi_gpio_8, and set properties
  set axi_gpio_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_8 ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {18} \
 ] $axi_gpio_8

  # Create instance: axi_gpio_9, and set properties
  set axi_gpio_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_9 ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {1} \
 ] $axi_gpio_9

  # Create instance: axi_gpio_10, and set properties
  set axi_gpio_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_10 ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
 ] $axi_gpio_10

  # Create instance: axi_gpio_11, and set properties
  set axi_gpio_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_11 ]
  set_property -dict [ list \
   CONFIG.C_ALL_INPUTS {1} \
   CONFIG.C_ALL_OUTPUTS {0} \
 ] $axi_gpio_11

  # Create instance: axi_gpio_12, and set properties
  set axi_gpio_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_12 ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {1} \
 ] $axi_gpio_12

  # Create instance: axi_gpio_13, and set properties
  set axi_gpio_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_13 ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {1} \
 ] $axi_gpio_13

  # Create instance: axi_gpio_14, and set properties
  set axi_gpio_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_14 ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {2} \
 ] $axi_gpio_14

  # Create instance: axi_gpio_15, and set properties
  set axi_gpio_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_15 ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {3} \
 ] $axi_gpio_15

  # Create instance: axi_gpio_16, and set properties
  set axi_gpio_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_16 ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {2} \
 ] $axi_gpio_16

  # Create instance: axi_gpio_17, and set properties
  set axi_gpio_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_17 ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {1} \
 ] $axi_gpio_17

  # Create instance: axi_gpio_18, and set properties
  set axi_gpio_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_18 ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {14} \
 ] $axi_gpio_18

  # Create instance: axi_gpio_19, and set properties
  set axi_gpio_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_19 ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {1} \
 ] $axi_gpio_19

  # Create instance: axi_gpio_20, and set properties
  set axi_gpio_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_20 ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {14} \
 ] $axi_gpio_20

  # Create instance: axi_gpio_21, and set properties
  set axi_gpio_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_21 ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {1} \
 ] $axi_gpio_21

  # Create instance: axis_red_pitaya_dac_0, and set properties
  set axis_red_pitaya_dac_0 [ create_bd_cell -type ip -vlnv pavel-demin:user:axis_red_pitaya_dac:1.0 axis_red_pitaya_dac_0 ]

  # Create instance: divider_0, and set properties
  set block_name divider
  set block_cell_name divider_0
  if { [catch {set divider_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $divider_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: low_pass_0, and set properties
  set block_name low_pass
  set block_cell_name low_pass_0
  if { [catch {set low_pass_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $low_pass_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: processing_system7_0, and set properties
  set processing_system7_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:processing_system7:5.5 processing_system7_0 ]
  set_property -dict [ list \
   CONFIG.PCW_FPGA_FCLK0_ENABLE {1} \
   CONFIG.PCW_FPGA_FCLK1_ENABLE {0} \
   CONFIG.PCW_FPGA_FCLK2_ENABLE {0} \
   CONFIG.PCW_FPGA_FCLK3_ENABLE {0} \
 ] $processing_system7_0

  # Create instance: ps7_0_axi_periph, and set properties
  set ps7_0_axi_periph [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 ps7_0_axi_periph ]
  set_property -dict [ list \
   CONFIG.NUM_MI {22} \
 ] $ps7_0_axi_periph

  # Create instance: rst_ps7_0_50M, and set properties
  set rst_ps7_0_50M [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 rst_ps7_0_50M ]

  # Create instance: scale_0, and set properties
  set block_name scale
  set block_cell_name scale_0
  if { [catch {set scale_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $scale_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: signal_split_0, and set properties
  set block_name signal_split
  set block_cell_name signal_split_0
  if { [catch {set signal_split_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $signal_split_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: signal_split_1, and set properties
  set block_name signal_split
  set block_cell_name signal_split_1
  if { [catch {set signal_split_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $signal_split_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: signal_split_2_1, and set properties
  set block_name signal_split_2
  set block_cell_name signal_split_2_1
  if { [catch {set signal_split_2_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $signal_split_2_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: signal_split_2_2, and set properties
  set block_name signal_split_2
  set block_cell_name signal_split_2_2
  if { [catch {set signal_split_2_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $signal_split_2_2 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: signal_split_2_3, and set properties
  set block_name signal_split_2
  set block_cell_name signal_split_2_3
  if { [catch {set signal_split_2_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $signal_split_2_3 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: signal_split_2_4, and set properties
  set block_name signal_split_2
  set block_cell_name signal_split_2_4
  if { [catch {set signal_split_2_4 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $signal_split_2_4 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: signal_split_2_5, and set properties
  set block_name signal_split_2
  set block_cell_name signal_split_2_5
  if { [catch {set signal_split_2_5 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $signal_split_2_5 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: util_ds_buf_1, and set properties
  set util_ds_buf_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.2 util_ds_buf_1 ]
  set_property -dict [ list \
   CONFIG.C_SIZE {2} \
 ] $util_ds_buf_1

  # Create instance: util_ds_buf_2, and set properties
  set util_ds_buf_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.2 util_ds_buf_2 ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {OBUFDS} \
   CONFIG.C_SIZE {2} \
 ] $util_ds_buf_2

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {xor} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_xorgate.png} \
 ] $util_vector_logic_0

  # Create instance: util_vector_logic_1, and set properties
  set util_vector_logic_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_1 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_vector_logic_1

  # Create interface connections
  connect_bd_intf_net -intf_net Add_0_M_AXIS [get_bd_intf_pins Add_0/M_AXIS] [get_bd_intf_pins signal_split_2_3/S_AXIS]
  connect_bd_intf_net -intf_net Add_1_M_AXIS [get_bd_intf_pins Add_1/M_AXIS] [get_bd_intf_pins signal_split_2_4/S_AXIS]
  connect_bd_intf_net -intf_net B_Select_0_M_AXIS [get_bd_intf_pins B_Select_0/M_AXIS] [get_bd_intf_pins Data_b_Pack_0/S_AXIS_2]
  connect_bd_intf_net -intf_net Data_b_Pack_0_M_AXIS [get_bd_intf_pins Data_b_Pack_0/M_AXIS] [get_bd_intf_pins axis_red_pitaya_dac_0/S_AXIS]
  connect_bd_intf_net -intf_net PID_Inputs_Pack_0_M_AXIS [get_bd_intf_pins PID_Inputs_Pack_0/M_AXIS] [get_bd_intf_pins PI_ctrl_0/S_AXIS]
  connect_bd_intf_net -intf_net PI_ctrl_0_M_AXIS [get_bd_intf_pins PI_ctrl_0/M_AXIS] [get_bd_intf_pins Voltage_Holder_0/S_AXIS]
  connect_bd_intf_net -intf_net Ramp_0_m_axis [get_bd_intf_pins Add_1/S_AXIS_1] [get_bd_intf_pins Ramp_0/m_axis]
  connect_bd_intf_net -intf_net Selector_0_M_AXIS [get_bd_intf_pins Selector_0/M_AXIS] [get_bd_intf_pins Voltage_Holder_1/S_AXIS]
  connect_bd_intf_net -intf_net Square_Wave_0_M_AXIS [get_bd_intf_pins Square_Wave_0/M_AXIS] [get_bd_intf_pins signal_split_2_5/S_AXIS]
  connect_bd_intf_net -intf_net Voltage_Holder_0_M_AXIS [get_bd_intf_pins Voltage_Holder_0/M_AXIS] [get_bd_intf_pins signal_split_2_2/S_AXIS]
  connect_bd_intf_net -intf_net Voltage_Holder_1_M_AXIS [get_bd_intf_pins Data_b_Pack_0/S_AXIS_1] [get_bd_intf_pins Voltage_Holder_1/M_AXIS]
  connect_bd_intf_net -intf_net axis_red_pitaya_adc_0_M_AXIS [get_bd_intf_pins ADC/M_AXIS] [get_bd_intf_pins low_pass_0/S_AXIS]
  connect_bd_intf_net -intf_net divider_0_M_AXIS [get_bd_intf_pins divider_0/M_AXIS] [get_bd_intf_pins signal_split_0/S_AXIS]
  connect_bd_intf_net -intf_net low_pass_0_M_AXIS [get_bd_intf_pins low_pass_0/M_AXIS] [get_bd_intf_pins scale_0/S_AXIS]
  connect_bd_intf_net -intf_net processing_system7_0_DDR [get_bd_intf_ports DDR] [get_bd_intf_pins processing_system7_0/DDR]
  connect_bd_intf_net -intf_net processing_system7_0_FIXED_IO [get_bd_intf_ports FIXED_IO] [get_bd_intf_pins processing_system7_0/FIXED_IO]
  connect_bd_intf_net -intf_net processing_system7_0_M_AXI_GP0 [get_bd_intf_pins processing_system7_0/M_AXI_GP0] [get_bd_intf_pins ps7_0_axi_periph/S00_AXI]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M00_AXI [get_bd_intf_pins axi_gpio_0/S_AXI] [get_bd_intf_pins ps7_0_axi_periph/M00_AXI]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M01_AXI [get_bd_intf_pins axi_gpio_1/S_AXI] [get_bd_intf_pins ps7_0_axi_periph/M01_AXI]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M02_AXI [get_bd_intf_pins axi_gpio_2/S_AXI] [get_bd_intf_pins ps7_0_axi_periph/M02_AXI]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M03_AXI [get_bd_intf_pins axi_gpio_3/S_AXI] [get_bd_intf_pins ps7_0_axi_periph/M03_AXI]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M04_AXI [get_bd_intf_pins axi_gpio_4/S_AXI] [get_bd_intf_pins ps7_0_axi_periph/M04_AXI]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M05_AXI [get_bd_intf_pins axi_gpio_5/S_AXI] [get_bd_intf_pins ps7_0_axi_periph/M05_AXI]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M06_AXI [get_bd_intf_pins axi_gpio_6/S_AXI] [get_bd_intf_pins ps7_0_axi_periph/M06_AXI]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M07_AXI [get_bd_intf_pins axi_gpio_7/S_AXI] [get_bd_intf_pins ps7_0_axi_periph/M07_AXI]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M08_AXI [get_bd_intf_pins axi_gpio_8/S_AXI] [get_bd_intf_pins ps7_0_axi_periph/M08_AXI]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M09_AXI [get_bd_intf_pins axi_gpio_9/S_AXI] [get_bd_intf_pins ps7_0_axi_periph/M09_AXI]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M10_AXI [get_bd_intf_pins axi_gpio_10/S_AXI] [get_bd_intf_pins ps7_0_axi_periph/M10_AXI]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M11_AXI [get_bd_intf_pins axi_gpio_11/S_AXI] [get_bd_intf_pins ps7_0_axi_periph/M11_AXI]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M12_AXI [get_bd_intf_pins axi_gpio_12/S_AXI] [get_bd_intf_pins ps7_0_axi_periph/M12_AXI]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M13_AXI [get_bd_intf_pins axi_gpio_13/S_AXI] [get_bd_intf_pins ps7_0_axi_periph/M13_AXI]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M14_AXI [get_bd_intf_pins axi_gpio_14/S_AXI] [get_bd_intf_pins ps7_0_axi_periph/M14_AXI]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M15_AXI [get_bd_intf_pins axi_gpio_15/S_AXI] [get_bd_intf_pins ps7_0_axi_periph/M15_AXI]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M16_AXI [get_bd_intf_pins axi_gpio_16/S_AXI] [get_bd_intf_pins ps7_0_axi_periph/M16_AXI]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M17_AXI [get_bd_intf_pins axi_gpio_17/S_AXI] [get_bd_intf_pins ps7_0_axi_periph/M17_AXI]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M18_AXI [get_bd_intf_pins axi_gpio_18/S_AXI] [get_bd_intf_pins ps7_0_axi_periph/M18_AXI]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M19_AXI [get_bd_intf_pins axi_gpio_19/S_AXI] [get_bd_intf_pins ps7_0_axi_periph/M19_AXI]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M20_AXI [get_bd_intf_pins axi_gpio_20/S_AXI] [get_bd_intf_pins ps7_0_axi_periph/M20_AXI]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M21_AXI [get_bd_intf_pins axi_gpio_21/S_AXI] [get_bd_intf_pins ps7_0_axi_periph/M21_AXI]
  connect_bd_intf_net -intf_net scale_0_M_AXIS [get_bd_intf_pins divider_0/S_AXIS] [get_bd_intf_pins scale_0/M_AXIS]
  connect_bd_intf_net -intf_net signal_split_0_M_AXIS_PORT1 [get_bd_intf_pins PID_Inputs_Pack_0/S_AXIS_1] [get_bd_intf_pins signal_split_0/M_AXIS_PORT1]
  connect_bd_intf_net -intf_net signal_split_0_M_AXIS_PORT2 [get_bd_intf_pins Scan_0/S_AXIS] [get_bd_intf_pins signal_split_0/M_AXIS_PORT2]
  connect_bd_intf_net -intf_net signal_split_0_M_AXIS_PORT3 [get_bd_intf_pins signal_split_0/M_AXIS_PORT3] [get_bd_intf_pins signal_split_2_1/S_AXIS]
  connect_bd_intf_net -intf_net signal_split_1_M_AXIS_PORT1 [get_bd_intf_pins Selector_0/S_AXIS_2] [get_bd_intf_pins signal_split_1/M_AXIS_PORT1]
  connect_bd_intf_net -intf_net signal_split_1_M_AXIS_PORT2 [get_bd_intf_pins Add_0/S_AXIS_2] [get_bd_intf_pins signal_split_1/M_AXIS_PORT2]
  connect_bd_intf_net -intf_net signal_split_1_M_AXIS_PORT3 [get_bd_intf_pins B_Select_0/S_AXIS_2] [get_bd_intf_pins signal_split_1/M_AXIS_PORT3]
  connect_bd_intf_net -intf_net signal_split_2_1_M_AXIS_PORT1 [get_bd_intf_pins Selector_0/S_AXIS_3] [get_bd_intf_pins signal_split_2_1/M_AXIS_PORT1]
  connect_bd_intf_net -intf_net signal_split_2_1_M_AXIS_PORT2 [get_bd_intf_pins B_Select_0/S_AXIS_1] [get_bd_intf_pins signal_split_2_1/M_AXIS_PORT2]
  connect_bd_intf_net -intf_net signal_split_2_2_M_AXIS_PORT1 [get_bd_intf_pins Add_0/S_AXIS_1] [get_bd_intf_pins signal_split_2_2/M_AXIS_PORT1]
  connect_bd_intf_net -intf_net signal_split_2_2_M_AXIS_PORT2 [get_bd_intf_pins B_Select_0/S_AXIS_3] [get_bd_intf_pins signal_split_2_2/M_AXIS_PORT2]
  connect_bd_intf_net -intf_net signal_split_2_3_M_AXIS_PORT1 [get_bd_intf_pins Selector_0/S_AXIS_1] [get_bd_intf_pins signal_split_2_3/M_AXIS_PORT1]
  connect_bd_intf_net -intf_net signal_split_2_3_M_AXIS_PORT2 [get_bd_intf_pins B_Select_0/S_AXIS_4] [get_bd_intf_pins signal_split_2_3/M_AXIS_PORT2]
  connect_bd_intf_net -intf_net signal_split_2_4_M_AXIS_PORT1 [get_bd_intf_pins PID_Inputs_Pack_0/S_AXIS_2] [get_bd_intf_pins signal_split_2_4/M_AXIS_PORT1]
  connect_bd_intf_net -intf_net signal_split_2_4_M_AXIS_PORT2 [get_bd_intf_pins signal_split_1/S_AXIS] [get_bd_intf_pins signal_split_2_4/M_AXIS_PORT2]
  connect_bd_intf_net -intf_net signal_split_2_5_M_AXIS_PORT1 [get_bd_intf_pins Add_1/S_AXIS_2] [get_bd_intf_pins signal_split_2_5/M_AXIS_PORT1]
  connect_bd_intf_net -intf_net signal_split_2_5_M_AXIS_PORT2 [get_bd_intf_pins B_Select_0/S_AXIS_5] [get_bd_intf_pins signal_split_2_5/M_AXIS_PORT2]

  # Create port connections
  connect_bd_net -net External_Digital_Inp_0_ext_2 [get_bd_pins External_Digital_Inp_0/ext_2] [get_bd_pins Voltage_Holder_1/hold] [get_bd_pins util_vector_logic_1/Op2]
  connect_bd_net -net LED_Contoller_0_LED_Signal [get_bd_ports led_o] [get_bd_pins LED_Contoller_0/LED_Signal]
  connect_bd_net -net PI_ctrl_0_int_value [get_bd_pins PI_ctrl_0/int_value] [get_bd_pins axi_gpio_11/gpio_io_i]
  connect_bd_net -net PI_ctrl_0_led [get_bd_pins LED_Contoller_0/PID_LED_Data] [get_bd_pins PI_ctrl_0/led]
  connect_bd_net -net Scan_0_Hold_Pulse [get_bd_pins LED_Contoller_0/hold_pulse] [get_bd_pins Ramp_0/hold_voltage] [get_bd_pins Scan_0/Hold_Pulse] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net Selector_0_led_info [get_bd_pins LED_Contoller_0/selected_mode] [get_bd_pins Selector_0/led_info]
  connect_bd_net -net adc_clk_n_i_1 [get_bd_ports adc_clk_n_i] [get_bd_pins ADC/adc_clk_n_i]
  connect_bd_net -net adc_clk_p_i_1 [get_bd_ports adc_clk_p_i] [get_bd_pins ADC/adc_clk_p_i]
  connect_bd_net -net adc_dat_a_i_1 [get_bd_ports adc_dat_a_i] [get_bd_pins ADC/adc_dat_a_i]
  connect_bd_net -net adc_dat_b_i_1 [get_bd_ports adc_dat_b_i] [get_bd_pins ADC/adc_dat_b_i]
  connect_bd_net -net axi_gpio_0_gpio_io_o [get_bd_pins Ramp_0/s_voltage_cutoff] [get_bd_pins axi_gpio_0/gpio_io_o]
  connect_bd_net -net axi_gpio_10_gpio_io_o [get_bd_pins PI_ctrl_0/pi_config] [get_bd_pins axi_gpio_10/gpio_io_o]
  connect_bd_net -net axi_gpio_13_gpio_io_o [get_bd_pins External_Digital_Inp_0/ext_1] [get_bd_pins PI_ctrl_0/int_reset_end] [get_bd_pins Ramp_0/turn_on] [get_bd_pins Selector_0/turn_off]
  connect_bd_net -net axi_gpio_13_gpio_io_o1 [get_bd_pins axi_gpio_13/gpio_io_o] [get_bd_pins util_vector_logic_0/Op2]
  connect_bd_net -net axi_gpio_14_gpio_io_o [get_bd_pins Selector_0/one_two_three] [get_bd_pins axi_gpio_14/gpio_io_o]
  connect_bd_net -net axi_gpio_15_gpio_io_o [get_bd_pins B_Select_0/one_two_three_four_five] [get_bd_pins axi_gpio_15/gpio_io_o]
  connect_bd_net -net axi_gpio_16_gpio_io_o [get_bd_pins Scan_0/mode] [get_bd_pins axi_gpio_16/gpio_io_o]
  connect_bd_net -net axi_gpio_17_gpio_io_o [get_bd_pins Scan_0/reset_max_min] [get_bd_pins axi_gpio_17/gpio_io_o]
  connect_bd_net -net axi_gpio_18_gpio_io_o [get_bd_pins Scan_0/overshoot_input] [get_bd_pins axi_gpio_18/gpio_io_o]
  connect_bd_net -net axi_gpio_19_gpio_io_o [get_bd_pins Voltage_Holder_0/hold] [get_bd_pins axi_gpio_12/gpio_io_o] [get_bd_pins util_vector_logic_1/Op1]
  connect_bd_net -net axi_gpio_19_gpio_io_o1 [get_bd_pins Scan_0/reset_latch] [get_bd_pins axi_gpio_19/gpio_io_o]
  connect_bd_net -net axi_gpio_1_gpio_io_o [get_bd_pins Ramp_0/forward_backwards] [get_bd_pins axi_gpio_1/gpio_io_o]
  connect_bd_net -net axi_gpio_20_gpio_io_o [get_bd_pins Square_Wave_0/magnitude] [get_bd_pins axi_gpio_20/gpio_io_o]
  connect_bd_net -net axi_gpio_21_gpio_io_o [get_bd_pins Square_Wave_0/on_off] [get_bd_pins axi_gpio_21/gpio_io_o]
  connect_bd_net -net axi_gpio_2_gpio_io_o [get_bd_pins Ramp_0/count_lim] [get_bd_pins axi_gpio_2/gpio_io_o]
  connect_bd_net -net axi_gpio_3_gpio_io_o [get_bd_pins Ramp_0/ramp_voltage_set] [get_bd_pins axi_gpio_3/gpio_io_o]
  connect_bd_net -net axi_gpio_4_gpio_io_o [get_bd_pins axi_gpio_4/gpio_io_o] [get_bd_pins low_pass_0/inverse_RC_a]
  connect_bd_net -net axi_gpio_5_gpio_io_o [get_bd_pins axi_gpio_5/gpio_io_o] [get_bd_pins low_pass_0/inverse_RC_b]
  connect_bd_net -net axi_gpio_6_gpio_io_o [get_bd_pins axi_gpio_6/gpio_io_o] [get_bd_pins low_pass_0/exp_a]
  connect_bd_net -net axi_gpio_7_gpio_io_o [get_bd_pins axi_gpio_7/gpio_io_o] [get_bd_pins low_pass_0/exp_b]
  connect_bd_net -net axi_gpio_8_gpio_io_o [get_bd_pins axi_gpio_8/gpio_io_o] [get_bd_pins scale_0/conf]
  connect_bd_net -net axi_gpio_9_gpio_io_o [get_bd_pins axi_gpio_9/gpio_io_o] [get_bd_pins divider_0/on_off]
  connect_bd_net -net axis_red_pitaya_adc_0_adc_clk [get_bd_pins ADC/clk_in1] [get_bd_pins Add_0/clk] [get_bd_pins Add_1/clk] [get_bd_pins B_Select_0/clk] [get_bd_pins LED_Contoller_0/clk] [get_bd_pins PI_ctrl_0/clk] [get_bd_pins Ramp_0/clk] [get_bd_pins Scan_0/clk] [get_bd_pins Selector_0/clk] [get_bd_pins Square_Wave_0/clk] [get_bd_pins Voltage_Holder_0/clk] [get_bd_pins Voltage_Holder_1/clk] [get_bd_pins axi_gpio_0/s_axi_aclk] [get_bd_pins axi_gpio_1/s_axi_aclk] [get_bd_pins axi_gpio_10/s_axi_aclk] [get_bd_pins axi_gpio_11/s_axi_aclk] [get_bd_pins axi_gpio_12/s_axi_aclk] [get_bd_pins axi_gpio_13/s_axi_aclk] [get_bd_pins axi_gpio_14/s_axi_aclk] [get_bd_pins axi_gpio_15/s_axi_aclk] [get_bd_pins axi_gpio_16/s_axi_aclk] [get_bd_pins axi_gpio_17/s_axi_aclk] [get_bd_pins axi_gpio_18/s_axi_aclk] [get_bd_pins axi_gpio_19/s_axi_aclk] [get_bd_pins axi_gpio_2/s_axi_aclk] [get_bd_pins axi_gpio_20/s_axi_aclk] [get_bd_pins axi_gpio_21/s_axi_aclk] [get_bd_pins axi_gpio_3/s_axi_aclk] [get_bd_pins axi_gpio_4/s_axi_aclk] [get_bd_pins axi_gpio_5/s_axi_aclk] [get_bd_pins axi_gpio_6/s_axi_aclk] [get_bd_pins axi_gpio_7/s_axi_aclk] [get_bd_pins axi_gpio_8/s_axi_aclk] [get_bd_pins axi_gpio_9/s_axi_aclk] [get_bd_pins axis_red_pitaya_dac_0/aclk] [get_bd_pins divider_0/clk] [get_bd_pins low_pass_0/clk] [get_bd_pins processing_system7_0/M_AXI_GP0_ACLK] [get_bd_pins ps7_0_axi_periph/ACLK] [get_bd_pins ps7_0_axi_periph/M00_ACLK] [get_bd_pins ps7_0_axi_periph/M01_ACLK] [get_bd_pins ps7_0_axi_periph/M02_ACLK] [get_bd_pins ps7_0_axi_periph/M03_ACLK] [get_bd_pins ps7_0_axi_periph/M04_ACLK] [get_bd_pins ps7_0_axi_periph/M05_ACLK] [get_bd_pins ps7_0_axi_periph/M06_ACLK] [get_bd_pins ps7_0_axi_periph/M07_ACLK] [get_bd_pins ps7_0_axi_periph/M08_ACLK] [get_bd_pins ps7_0_axi_periph/M09_ACLK] [get_bd_pins ps7_0_axi_periph/M10_ACLK] [get_bd_pins ps7_0_axi_periph/M11_ACLK] [get_bd_pins ps7_0_axi_periph/M12_ACLK] [get_bd_pins ps7_0_axi_periph/M13_ACLK] [get_bd_pins ps7_0_axi_periph/M14_ACLK] [get_bd_pins ps7_0_axi_periph/M15_ACLK] [get_bd_pins ps7_0_axi_periph/M16_ACLK] [get_bd_pins ps7_0_axi_periph/M17_ACLK] [get_bd_pins ps7_0_axi_periph/M18_ACLK] [get_bd_pins ps7_0_axi_periph/M19_ACLK] [get_bd_pins ps7_0_axi_periph/M20_ACLK] [get_bd_pins ps7_0_axi_periph/M21_ACLK] [get_bd_pins ps7_0_axi_periph/S00_ACLK] [get_bd_pins rst_ps7_0_50M/slowest_sync_clk] [get_bd_pins scale_0/clk]
  connect_bd_net -net axis_red_pitaya_adc_0_adc_csn [get_bd_ports adc_csn_o] [get_bd_pins ADC/adc_csn_o]
  connect_bd_net -net axis_red_pitaya_dac_0_dac_clk [get_bd_ports dac_clk_o] [get_bd_pins axis_red_pitaya_dac_0/dac_clk]
  connect_bd_net -net axis_red_pitaya_dac_0_dac_dat [get_bd_ports dac_dat_o] [get_bd_pins axis_red_pitaya_dac_0/dac_dat]
  connect_bd_net -net axis_red_pitaya_dac_0_dac_rst [get_bd_ports dac_rst_o] [get_bd_pins axis_red_pitaya_dac_0/dac_rst]
  connect_bd_net -net axis_red_pitaya_dac_0_dac_sel [get_bd_ports dac_sel_o] [get_bd_pins axis_red_pitaya_dac_0/dac_sel]
  connect_bd_net -net axis_red_pitaya_dac_0_dac_wrt [get_bd_ports dac_wrt_o] [get_bd_pins axis_red_pitaya_dac_0/dac_wrt]
  connect_bd_net -net clk_wiz_0_clk_out1 [get_bd_pins ADC/clk_out1] [get_bd_pins axis_red_pitaya_dac_0/ddr_clk]
  connect_bd_net -net clk_wiz_0_locked [get_bd_pins ADC/locked] [get_bd_pins axis_red_pitaya_dac_0/locked]
  connect_bd_net -net daisy_n_i_1 [get_bd_ports daisy_n_i] [get_bd_pins util_ds_buf_1/IBUF_DS_N]
  connect_bd_net -net daisy_p_i_1 [get_bd_ports daisy_p_i] [get_bd_pins util_ds_buf_1/IBUF_DS_P]
  connect_bd_net -net exp_p_tri_io_1 [get_bd_ports exp_p_tri_io] [get_bd_pins External_Digital_Inp_0/exp_p_input]
  connect_bd_net -net processing_system7_0_FCLK_RESET0_N [get_bd_pins processing_system7_0/FCLK_RESET0_N] [get_bd_pins rst_ps7_0_50M/ext_reset_in]
  connect_bd_net -net rst_ps7_0_50M_peripheral_aresetn [get_bd_pins axi_gpio_0/s_axi_aresetn] [get_bd_pins axi_gpio_1/s_axi_aresetn] [get_bd_pins axi_gpio_10/s_axi_aresetn] [get_bd_pins axi_gpio_11/s_axi_aresetn] [get_bd_pins axi_gpio_12/s_axi_aresetn] [get_bd_pins axi_gpio_13/s_axi_aresetn] [get_bd_pins axi_gpio_14/s_axi_aresetn] [get_bd_pins axi_gpio_15/s_axi_aresetn] [get_bd_pins axi_gpio_16/s_axi_aresetn] [get_bd_pins axi_gpio_17/s_axi_aresetn] [get_bd_pins axi_gpio_18/s_axi_aresetn] [get_bd_pins axi_gpio_19/s_axi_aresetn] [get_bd_pins axi_gpio_2/s_axi_aresetn] [get_bd_pins axi_gpio_20/s_axi_aresetn] [get_bd_pins axi_gpio_21/s_axi_aresetn] [get_bd_pins axi_gpio_3/s_axi_aresetn] [get_bd_pins axi_gpio_4/s_axi_aresetn] [get_bd_pins axi_gpio_5/s_axi_aresetn] [get_bd_pins axi_gpio_6/s_axi_aresetn] [get_bd_pins axi_gpio_7/s_axi_aresetn] [get_bd_pins axi_gpio_8/s_axi_aresetn] [get_bd_pins axi_gpio_9/s_axi_aresetn] [get_bd_pins ps7_0_axi_periph/ARESETN] [get_bd_pins ps7_0_axi_periph/M00_ARESETN] [get_bd_pins ps7_0_axi_periph/M01_ARESETN] [get_bd_pins ps7_0_axi_periph/M02_ARESETN] [get_bd_pins ps7_0_axi_periph/M03_ARESETN] [get_bd_pins ps7_0_axi_periph/M04_ARESETN] [get_bd_pins ps7_0_axi_periph/M05_ARESETN] [get_bd_pins ps7_0_axi_periph/M06_ARESETN] [get_bd_pins ps7_0_axi_periph/M07_ARESETN] [get_bd_pins ps7_0_axi_periph/M08_ARESETN] [get_bd_pins ps7_0_axi_periph/M09_ARESETN] [get_bd_pins ps7_0_axi_periph/M10_ARESETN] [get_bd_pins ps7_0_axi_periph/M11_ARESETN] [get_bd_pins ps7_0_axi_periph/M12_ARESETN] [get_bd_pins ps7_0_axi_periph/M13_ARESETN] [get_bd_pins ps7_0_axi_periph/M14_ARESETN] [get_bd_pins ps7_0_axi_periph/M15_ARESETN] [get_bd_pins ps7_0_axi_periph/M16_ARESETN] [get_bd_pins ps7_0_axi_periph/M17_ARESETN] [get_bd_pins ps7_0_axi_periph/M18_ARESETN] [get_bd_pins ps7_0_axi_periph/M19_ARESETN] [get_bd_pins ps7_0_axi_periph/M20_ARESETN] [get_bd_pins ps7_0_axi_periph/M21_ARESETN] [get_bd_pins ps7_0_axi_periph/S00_ARESETN] [get_bd_pins rst_ps7_0_50M/peripheral_aresetn]
  connect_bd_net -net util_ds_buf_1_IBUF_OUT [get_bd_pins util_ds_buf_1/IBUF_OUT] [get_bd_pins util_ds_buf_2/OBUF_IN]
  connect_bd_net -net util_ds_buf_2_OBUF_DS_N [get_bd_ports daisy_n_o] [get_bd_pins util_ds_buf_2/OBUF_DS_N]
  connect_bd_net -net util_ds_buf_2_OBUF_DS_P [get_bd_ports daisy_p_o] [get_bd_pins util_ds_buf_2/OBUF_DS_P]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins Selector_0/Scan_Complete] [get_bd_pins util_vector_logic_0/Res]
  connect_bd_net -net util_vector_logic_1_Res [get_bd_pins PI_ctrl_0/int_hold] [get_bd_pins util_vector_logic_1/Res]

  # Create address segments
  assign_bd_address -offset 0x41200000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs axi_gpio_0/S_AXI/Reg] -force
  assign_bd_address -offset 0x412A0000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs axi_gpio_10/S_AXI/Reg] -force
  assign_bd_address -offset 0x412B0000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs axi_gpio_11/S_AXI/Reg] -force
  assign_bd_address -offset 0x412C0000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs axi_gpio_12/S_AXI/Reg] -force
  assign_bd_address -offset 0x412D0000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs axi_gpio_13/S_AXI/Reg] -force
  assign_bd_address -offset 0x412E0000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs axi_gpio_14/S_AXI/Reg] -force
  assign_bd_address -offset 0x412F0000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs axi_gpio_15/S_AXI/Reg] -force
  assign_bd_address -offset 0x41300000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs axi_gpio_16/S_AXI/Reg] -force
  assign_bd_address -offset 0x41310000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs axi_gpio_17/S_AXI/Reg] -force
  assign_bd_address -offset 0x41320000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs axi_gpio_18/S_AXI/Reg] -force
  assign_bd_address -offset 0x41330000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs axi_gpio_19/S_AXI/Reg] -force
  assign_bd_address -offset 0x41210000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs axi_gpio_1/S_AXI/Reg] -force
  assign_bd_address -offset 0x41340000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs axi_gpio_20/S_AXI/Reg] -force
  assign_bd_address -offset 0x41350000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs axi_gpio_21/S_AXI/Reg] -force
  assign_bd_address -offset 0x41220000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs axi_gpio_2/S_AXI/Reg] -force
  assign_bd_address -offset 0x41230000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs axi_gpio_3/S_AXI/Reg] -force
  assign_bd_address -offset 0x41240000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs axi_gpio_4/S_AXI/Reg] -force
  assign_bd_address -offset 0x41250000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs axi_gpio_5/S_AXI/Reg] -force
  assign_bd_address -offset 0x41260000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs axi_gpio_6/S_AXI/Reg] -force
  assign_bd_address -offset 0x41270000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs axi_gpio_7/S_AXI/Reg] -force
  assign_bd_address -offset 0x41280000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs axi_gpio_8/S_AXI/Reg] -force
  assign_bd_address -offset 0x41290000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs axi_gpio_9/S_AXI/Reg] -force

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"0.497943",
   "Default View_TopLeft":"2787,1229",
   "ExpandedHierarchyInLayout":"",
   "PinnedBlocks":"",
   "PinnedPorts":"",
   "guistr":"# # String gsaved with Nlview 7.0r6  2020-01-29 bk=1.5227 VDI=41 GEI=36 GUI=JA:10.0 non-TLS
#  -string -flagsOSRD
preplace port Vp_Vn -pg 1 -lvl 0 -x 0 -y 210 -defaultsOSRD
preplace port Vaux0 -pg 1 -lvl 0 -x 0 -y 20 -defaultsOSRD
preplace port Vaux1 -pg 1 -lvl 0 -x 0 -y 40 -defaultsOSRD
preplace port Vaux9 -pg 1 -lvl 0 -x 0 -y 100 -defaultsOSRD
preplace port Vaux8 -pg 1 -lvl 0 -x 0 -y 80 -defaultsOSRD
preplace port DDR -pg 1 -lvl 18 -x 6220 -y 3120 -defaultsOSRD
preplace port FIXED_IO -pg 1 -lvl 18 -x 6220 -y 2670 -defaultsOSRD
preplace port port-id_adc_clk_p_i -pg 1 -lvl 0 -x 0 -y 130 -defaultsOSRD
preplace port port-id_adc_clk_n_i -pg 1 -lvl 0 -x 0 -y 150 -defaultsOSRD
preplace port port-id_adc_enc_p_o -pg 1 -lvl 18 -x 6220 -y 60 -defaultsOSRD
preplace port port-id_adc_enc_n_o -pg 1 -lvl 18 -x 6220 -y 40 -defaultsOSRD
preplace port port-id_adc_csn_o -pg 1 -lvl 18 -x 6220 -y 160 -defaultsOSRD
preplace port port-id_dac_clk_o -pg 1 -lvl 18 -x 6220 -y 1710 -defaultsOSRD
preplace port port-id_dac_rst_o -pg 1 -lvl 18 -x 6220 -y 1730 -defaultsOSRD
preplace port port-id_dac_sel_o -pg 1 -lvl 18 -x 6220 -y 1750 -defaultsOSRD
preplace port port-id_dac_wrt_o -pg 1 -lvl 18 -x 6220 -y 1770 -defaultsOSRD
preplace portBus adc_dat_a_i -pg 1 -lvl 0 -x 0 -y 170 -defaultsOSRD
preplace portBus adc_dat_b_i -pg 1 -lvl 0 -x 0 -y 190 -defaultsOSRD
preplace portBus dac_dat_o -pg 1 -lvl 18 -x 6220 -y 1790 -defaultsOSRD
preplace portBus dac_pwm_o -pg 1 -lvl 18 -x 6220 -y 20 -defaultsOSRD
preplace portBus daisy_p_o -pg 1 -lvl 18 -x 6220 -y 80 -defaultsOSRD
preplace portBus daisy_n_o -pg 1 -lvl 18 -x 6220 -y 100 -defaultsOSRD
preplace portBus daisy_p_i -pg 1 -lvl 0 -x 0 -y 60 -defaultsOSRD
preplace portBus daisy_n_i -pg 1 -lvl 0 -x 0 -y 250 -defaultsOSRD
preplace portBus led_o -pg 1 -lvl 18 -x 6220 -y 1920 -defaultsOSRD
preplace portBus exp_p_tri_io -pg 1 -lvl 0 -x 0 -y 3110 -defaultsOSRD
preplace portBus exp_n_tri_io -pg 1 -lvl 0 -x 0 -y 230 -defaultsOSRD
preplace inst util_ds_buf_1 -pg 1 -lvl 16 -x 5700 -y 80 -defaultsOSRD
preplace inst util_ds_buf_2 -pg 1 -lvl 17 -x 6040 -y 80 -defaultsOSRD
preplace inst axis_red_pitaya_dac_0 -pg 1 -lvl 17 -x 6040 -y 1750 -defaultsOSRD
preplace inst ADC -pg 1 -lvl 3 -x 1050 -y 160 -defaultsOSRD
preplace inst processing_system7_0 -pg 1 -lvl 1 -x 230 -y 2690 -defaultsOSRD
preplace inst rst_ps7_0_50M -pg 1 -lvl 1 -x 230 -y 2510 -defaultsOSRD
preplace inst low_pass_0 -pg 1 -lvl 4 -x 1490 -y 750 -defaultsOSRD
preplace inst Scan_0 -pg 1 -lvl 8 -x 3000 -y 2150 -defaultsOSRD
preplace inst util_vector_logic_0 -pg 1 -lvl 13 -x 4630 -y 2040 -defaultsOSRD
preplace inst Voltage_Holder_0 -pg 1 -lvl 10 -x 3680 -y 1730 -defaultsOSRD
preplace inst signal_split_0 -pg 1 -lvl 7 -x 2590 -y 2260 -defaultsOSRD
preplace inst Voltage_Holder_1 -pg 1 -lvl 15 -x 5370 -y 2020 -defaultsOSRD
preplace inst util_vector_logic_1 -pg 1 -lvl 8 -x 3000 -y 1960 -defaultsOSRD
preplace inst divider_0 -pg 1 -lvl 6 -x 2270 -y 2260 -defaultsOSRD
preplace inst signal_split_2_1 -pg 1 -lvl 13 -x 4630 -y 2200 -defaultsOSRD
preplace inst signal_split_1 -pg 1 -lvl 11 -x 4000 -y 1890 -defaultsOSRD
preplace inst signal_split_2_2 -pg 1 -lvl 11 -x 4000 -y 1730 -defaultsOSRD
preplace inst signal_split_2_3 -pg 1 -lvl 13 -x 4630 -y 1870 -defaultsOSRD
preplace inst Data_b_Pack_0 -pg 1 -lvl 16 -x 5700 -y 1780 -defaultsOSRD
preplace inst Add_0 -pg 1 -lvl 12 -x 4350 -y 1890 -defaultsOSRD
preplace inst signal_split_2_4 -pg 1 -lvl 7 -x 2590 -y 1910 -defaultsOSRD
preplace inst PID_Inputs_Pack_0 -pg 1 -lvl 8 -x 3000 -y 1760 -defaultsOSRD
preplace inst LED_Contoller_0 -pg 1 -lvl 17 -x 6040 -y 1920 -defaultsOSRD
preplace inst Selector_0 -pg 1 -lvl 14 -x 5000 -y 2010 -defaultsOSRD
preplace inst Ramp_0 -pg 1 -lvl 5 -x 1880 -y 2050 -defaultsOSRD
preplace inst PI_ctrl_0 -pg 1 -lvl 9 -x 3370 -y 1730 -defaultsOSRD
preplace inst scale_0 -pg 1 -lvl 5 -x 1880 -y 1180 -defaultsOSRD
preplace inst B_Select_0 -pg 1 -lvl 15 -x 5370 -y 1790 -defaultsOSRD
preplace inst Add_1 -pg 1 -lvl 6 -x 2270 -y 1760 -defaultsOSRD
preplace inst signal_split_2_5 -pg 1 -lvl 5 -x 1880 -y 1830 -defaultsOSRD
preplace inst External_Digital_Inp_0 -pg 1 -lvl 4 -x 1490 -y 1990 -defaultsOSRD
preplace inst axi_gpio_0 -pg 1 -lvl 3 -x 1050 -y 330 -defaultsOSRD
preplace inst axi_gpio_1 -pg 1 -lvl 3 -x 1050 -y 470 -defaultsOSRD
preplace inst axi_gpio_2 -pg 1 -lvl 3 -x 1050 -y 2750 -defaultsOSRD
preplace inst axi_gpio_3 -pg 1 -lvl 3 -x 1050 -y 2890 -defaultsOSRD
preplace inst axi_gpio_4 -pg 1 -lvl 3 -x 1050 -y 610 -defaultsOSRD
preplace inst axi_gpio_5 -pg 1 -lvl 3 -x 1050 -y 750 -defaultsOSRD
preplace inst axi_gpio_6 -pg 1 -lvl 3 -x 1050 -y 890 -defaultsOSRD
preplace inst axi_gpio_7 -pg 1 -lvl 3 -x 1050 -y 1030 -defaultsOSRD
preplace inst axi_gpio_8 -pg 1 -lvl 3 -x 1050 -y 1170 -defaultsOSRD
preplace inst axi_gpio_9 -pg 1 -lvl 3 -x 1050 -y 3340 -defaultsOSRD
preplace inst axi_gpio_10 -pg 1 -lvl 3 -x 1050 -y 1330 -defaultsOSRD
preplace inst axi_gpio_11 -pg 1 -lvl 3 -x 1050 -y 1470 -defaultsOSRD
preplace inst axi_gpio_12 -pg 1 -lvl 3 -x 1050 -y 1610 -defaultsOSRD
preplace inst axi_gpio_13 -pg 1 -lvl 3 -x 1050 -y 1750 -defaultsOSRD
preplace inst axi_gpio_14 -pg 1 -lvl 3 -x 1050 -y 2310 -defaultsOSRD
preplace inst axi_gpio_15 -pg 1 -lvl 3 -x 1050 -y 1890 -defaultsOSRD
preplace inst axi_gpio_16 -pg 1 -lvl 3 -x 1050 -y 2590 -defaultsOSRD
preplace inst axi_gpio_17 -pg 1 -lvl 3 -x 1050 -y 3030 -defaultsOSRD
preplace inst axi_gpio_18 -pg 1 -lvl 3 -x 1050 -y 2450 -defaultsOSRD
preplace inst axi_gpio_19 -pg 1 -lvl 3 -x 1050 -y 3200 -defaultsOSRD
preplace inst ps7_0_axi_periph -pg 1 -lvl 2 -x 620 -y 1780 -defaultsOSRD
preplace inst axi_gpio_20 -pg 1 -lvl 3 -x 1050 -y 2030 -defaultsOSRD
preplace inst axi_gpio_21 -pg 1 -lvl 3 -x 1050 -y 2170 -defaultsOSRD
preplace inst Square_Wave_0 -pg 1 -lvl 4 -x 1490 -y 1670 -defaultsOSRD
preplace netloc External_Digital_Inp_0_ext_2 1 4 11 1650J 1920 NJ 1920 2430J 1980 2830 2030 3170J 2020 NJ 2020 NJ 2020 4170J 1730 NJ 1730 NJ 1730 5180J
preplace netloc LED_Contoller_0_LED_Signal 1 17 1 NJ 1920
preplace netloc PI_ctrl_0_int_value 1 3 7 1190 1580 NJ 1580 NJ 1580 NJ 1580 NJ 1580 NJ 1580 3520
preplace netloc PI_ctrl_0_led 1 9 8 3530 1820 3850J 1980 4190J 1770 NJ 1770 NJ 1770 5170J 1910 NJ 1910 NJ
preplace netloc Scan_0_Hold_Pulse 1 4 13 1660 2170 2040J 2140 NJ 2140 2760J 2260 3200 2030 NJ 2030 NJ 2030 NJ 2030 4480 1940 4790J 1890 5150J 1920 NJ 1920 5880J
preplace netloc Selector_0_led_info 1 14 3 5160J 2100 5550J 1900 5880
preplace netloc adc_clk_n_i_1 1 0 3 NJ 150 NJ 150 NJ
preplace netloc adc_clk_p_i_1 1 0 3 NJ 130 NJ 130 NJ
preplace netloc adc_dat_a_i_1 1 0 3 NJ 170 NJ 170 NJ
preplace netloc adc_dat_b_i_1 1 0 3 NJ 190 NJ 190 NJ
preplace netloc axi_gpio_0_gpio_io_o 1 3 2 1220J 470 1660
preplace netloc axi_gpio_10_gpio_io_o 1 3 6 1200 1570 NJ 1570 NJ 1570 NJ 1570 NJ 1570 3170J
preplace netloc axi_gpio_13_gpio_io_o 1 4 10 1680 1930 NJ 1930 2410J 2040 NJ 2040 3190 2040 NJ 2040 NJ 2040 NJ 2040 4480J 2110 4850J
preplace netloc axi_gpio_13_gpio_io_o1 1 3 10 N 1760 NJ 1760 2070J 1860 2400J 1800 2840J 1830 NJ 1830 NJ 1830 3830J 2050 NJ 2050 NJ
preplace netloc axi_gpio_14_gpio_io_o 1 3 11 1210J 1750 NJ 1750 2090J 1850 2410J 1810 2830J 1840 NJ 1840 NJ 1840 3810J 2120 NJ 2120 NJ 2120 4840
preplace netloc axi_gpio_15_gpio_io_o 1 3 12 NJ 1900 NJ 1900 NJ 1900 2440J 1830 2810J 1860 NJ 1860 NJ 1860 3820J 1970 4200J 1780 NJ 1780 NJ 1780 5160
preplace netloc axi_gpio_16_gpio_io_o 1 3 5 1230 2180 NJ 2180 2080J 2150 NJ 2150 2820J
preplace netloc axi_gpio_17_gpio_io_o 1 3 5 1270 2200 NJ 2200 2120J 2170 NJ 2170 2810J
preplace netloc axi_gpio_18_gpio_io_o 1 3 5 1260 2210 NJ 2210 2110J 2160 NJ 2160 2770J
preplace netloc axi_gpio_19_gpio_io_o 1 3 7 1190 1590 NJ 1590 NJ 1590 NJ 1590 2820 1870 NJ 1870 3540J
preplace netloc axi_gpio_19_gpio_io_o1 1 3 5 1280 2190 NJ 2190 2130J 2180 NJ 2180 2740J
preplace netloc axi_gpio_1_gpio_io_o 1 3 2 NJ 480 1640
preplace netloc axi_gpio_20_gpio_io_o 1 3 1 1190 1650n
preplace netloc axi_gpio_21_gpio_io_o 1 3 1 1200 1690n
preplace netloc axi_gpio_2_gpio_io_o 1 3 2 1220 2070 NJ
preplace netloc axi_gpio_3_gpio_io_o 1 3 2 1250 2090 NJ
preplace netloc axi_gpio_4_gpio_io_o 1 3 1 1190 620n
preplace netloc axi_gpio_5_gpio_io_o 1 3 1 N 760
preplace netloc axi_gpio_6_gpio_io_o 1 3 1 1190 780n
preplace netloc axi_gpio_7_gpio_io_o 1 3 1 1200 800n
preplace netloc axi_gpio_8_gpio_io_o 1 3 2 NJ 1180 N
preplace netloc axi_gpio_9_gpio_io_o 1 3 3 1290 2260 NJ 2260 NJ
preplace netloc axis_red_pitaya_adc_0_adc_clk 1 0 17 20 2240 450 1230 850 250 1210 1200 1670 1740 2050 1870 2420J 1820 2790 1880 3180 1880 3550 1810 NJ 1810 4210 1790 NJ 1790 4800 1830 5200 1930 NJ 1930 5870
preplace netloc axis_red_pitaya_adc_0_adc_csn 1 3 15 NJ 160 NJ 160 NJ 160 NJ 160 NJ 160 NJ 160 NJ 160 NJ 160 NJ 160 NJ 160 NJ 160 NJ 160 NJ 160 NJ 160 NJ
preplace netloc axis_red_pitaya_dac_0_dac_clk 1 17 1 NJ 1710
preplace netloc axis_red_pitaya_dac_0_dac_dat 1 17 1 NJ 1790
preplace netloc axis_red_pitaya_dac_0_dac_rst 1 17 1 NJ 1730
preplace netloc axis_red_pitaya_dac_0_dac_sel 1 17 1 NJ 1750
preplace netloc axis_red_pitaya_dac_0_dac_wrt 1 17 1 NJ 1770
preplace netloc clk_wiz_0_clk_out1 1 3 14 1290 450 NJ 450 NJ 450 NJ 450 NJ 450 NJ 450 NJ 450 NJ 450 NJ 450 NJ 450 NJ 450 NJ 450 NJ 450 5880J
preplace netloc clk_wiz_0_locked 1 3 14 1240 460 NJ 460 NJ 460 NJ 460 NJ 460 NJ 460 NJ 460 NJ 460 NJ 460 NJ 460 NJ 460 NJ 460 NJ 460 5860J
preplace netloc daisy_n_i_1 1 0 16 20J 50 NJ 50 NJ 50 NJ 50 NJ 50 NJ 50 NJ 50 NJ 50 NJ 50 NJ 50 NJ 50 NJ 50 NJ 50 NJ 50 NJ 50 5550J
preplace netloc daisy_p_i_1 1 0 16 NJ 60 NJ 60 NJ 60 NJ 60 NJ 60 NJ 60 NJ 60 NJ 60 NJ 60 NJ 60 NJ 60 NJ 60 NJ 60 NJ 60 NJ 60 5540J
preplace netloc exp_p_tri_io_1 1 0 4 NJ 3110 NJ 3110 NJ 3110 1240J
preplace netloc processing_system7_0_FCLK_RESET0_N 1 0 2 30 2410 430
preplace netloc rst_ps7_0_50M_peripheral_aresetn 1 1 2 440 1240 870
preplace netloc util_ds_buf_1_IBUF_OUT 1 16 1 N 80
preplace netloc util_ds_buf_2_OBUF_DS_N 1 17 1 NJ 100
preplace netloc util_ds_buf_2_OBUF_DS_P 1 17 1 NJ 80
preplace netloc util_vector_logic_0_Res 1 13 1 4780 2040n
preplace netloc util_vector_logic_1_Res 1 8 1 3170 1750n
preplace netloc Add_0_M_AXIS 1 12 1 4480 1870n
preplace netloc Add_1_M_AXIS 1 6 1 2430 1760n
preplace netloc B_Select_0_M_AXIS 1 15 1 N 1790
preplace netloc Data_b_Pack_0_M_AXIS 1 16 1 5850 1720n
preplace netloc PID_Inputs_Pack_0_M_AXIS 1 8 1 3160 1690n
preplace netloc PI_ctrl_0_M_AXIS 1 9 1 N 1710
preplace netloc Ramp_0_m_axis 1 5 1 2060 1740n
preplace netloc Selector_0_M_AXIS 1 14 1 N 2000
preplace netloc Square_Wave_0_M_AXIS 1 4 1 1650 1670n
preplace netloc Voltage_Holder_0_M_AXIS 1 10 1 N 1730
preplace netloc Voltage_Holder_1_M_AXIS 1 15 1 5540 1770n
preplace netloc axis_red_pitaya_adc_0_M_AXIS 1 3 1 1250 120n
preplace netloc divider_0_M_AXIS 1 6 1 N 2260
preplace netloc low_pass_0_M_AXIS 1 4 1 1670 750n
preplace netloc processing_system7_0_DDR 1 1 17 450J 3120 NJ 3120 NJ 3120 NJ 3120 NJ 3120 NJ 3120 NJ 3120 NJ 3120 NJ 3120 NJ 3120 NJ 3120 NJ 3120 NJ 3120 NJ 3120 NJ 3120 NJ 3120 NJ
preplace netloc processing_system7_0_FIXED_IO 1 1 17 NJ 2670 NJ 2670 NJ 2670 NJ 2670 NJ 2670 NJ 2670 NJ 2670 NJ 2670 NJ 2670 NJ 2670 NJ 2670 NJ 2670 NJ 2670 NJ 2670 NJ 2670 NJ 2670 NJ
preplace netloc processing_system7_0_M_AXI_GP0 1 1 1 460 1300n
preplace netloc ps7_0_axi_periph_M00_AXI 1 2 1 770 310n
preplace netloc ps7_0_axi_periph_M01_AXI 1 2 1 790 450n
preplace netloc ps7_0_axi_periph_M02_AXI 1 2 1 800 1610n
preplace netloc ps7_0_axi_periph_M03_AXI 1 2 1 790 1630n
preplace netloc ps7_0_axi_periph_M04_AXI 1 2 1 820 590n
preplace netloc ps7_0_axi_periph_M05_AXI 1 2 1 830 730n
preplace netloc ps7_0_axi_periph_M06_AXI 1 2 1 840 870n
preplace netloc ps7_0_axi_periph_M07_AXI 1 2 1 860 1010n
preplace netloc ps7_0_axi_periph_M08_AXI 1 2 1 880 1150n
preplace netloc ps7_0_axi_periph_M09_AXI 1 2 1 820 1750n
preplace netloc ps7_0_axi_periph_M10_AXI 1 2 1 810 1310n
preplace netloc ps7_0_axi_periph_M11_AXI 1 2 1 890 1450n
preplace netloc ps7_0_axi_periph_M12_AXI 1 2 1 900 1590n
preplace netloc ps7_0_axi_periph_M13_AXI 1 2 1 910 1730n
preplace netloc ps7_0_axi_periph_M14_AXI 1 2 1 900 1850n
preplace netloc ps7_0_axi_periph_M15_AXI 1 2 1 N 1870
preplace netloc ps7_0_axi_periph_M16_AXI 1 2 1 780 1890n
preplace netloc ps7_0_axi_periph_M17_AXI 1 2 1 810 1910n
preplace netloc ps7_0_axi_periph_M18_AXI 1 2 1 840 1930n
preplace netloc ps7_0_axi_periph_M19_AXI 1 2 1 770 1950n
preplace netloc ps7_0_axi_periph_M20_AXI 1 2 1 860 1970n
preplace netloc ps7_0_axi_periph_M21_AXI 1 2 1 830 1990n
preplace netloc scale_0_M_AXIS 1 5 1 2100 1180n
preplace netloc signal_split_0_M_AXIS_PORT1 1 7 1 2780 1750n
preplace netloc signal_split_0_M_AXIS_PORT2 1 7 1 2750 2100n
preplace netloc signal_split_0_M_AXIS_PORT3 1 7 6 NJ 2280 NJ 2280 NJ 2280 NJ 2280 NJ 2280 4480
preplace netloc signal_split_1_M_AXIS_PORT1 1 11 3 4160 1740 NJ 1740 4780J
preplace netloc signal_split_1_M_AXIS_PORT2 1 11 1 N 1890
preplace netloc signal_split_1_M_AXIS_PORT3 1 11 4 4220 1810 4480J 1760 NJ 1760 5200J
preplace netloc signal_split_2_1_M_AXIS_PORT1 1 13 1 4830 1990n
preplace netloc signal_split_2_1_M_AXIS_PORT2 1 13 2 4820J 1740 5200
preplace netloc signal_split_2_2_M_AXIS_PORT1 1 11 1 4180 1720n
preplace netloc signal_split_2_2_M_AXIS_PORT2 1 11 4 4150J 1750 NJ 1750 NJ 1750 5190
preplace netloc signal_split_2_3_M_AXIS_PORT1 1 13 1 4830 1860n
preplace netloc signal_split_2_3_M_AXIS_PORT2 1 13 2 4810J 1790 N
preplace netloc signal_split_2_4_M_AXIS_PORT1 1 7 1 2750 1770n
preplace netloc signal_split_2_4_M_AXIS_PORT2 1 7 4 2760 1890 NJ 1890 NJ 1890 NJ
preplace netloc signal_split_2_5_M_AXIS_PORT1 1 5 1 2080 1760n
preplace netloc signal_split_2_5_M_AXIS_PORT2 1 5 10 NJ 1840 NJ 1840 2800J 1850 NJ 1850 NJ 1850 3840J 1800 NJ 1800 NJ 1800 NJ 1800 5150
levelinfo -pg 1 0 230 620 1050 1490 1880 2270 2590 3000 3370 3680 4000 4350 4630 5000 5370 5700 6040 6220
pagesize -pg 1 -db -bbox -sgen -170 0 6380 3420
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  save_bd_design
common::send_gid_msg -ssname BD::TCL -id 2050 -severity "WARNING" "This Tcl script was generated from a block design that has not been validated. It is possible that design <$design_name> may result in errors during validation."

  close_bd_design $design_name 
}
# End of cr_bd_system()
cr_bd_system ""
set_property REGISTERED_WITH_MANAGER "1" [get_files system.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files system.bd ] 

set idrFlowPropertiesConstraints ""
catch {
 set idrFlowPropertiesConstraints [get_param runs.disableIDRFlowPropertyConstraints]
 set_param runs.disableIDRFlowPropertyConstraints 1
}

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7z010clg400-1 -flow {Vivado Synthesis 2022} -strategy "Flow_PerfOptimized_high" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Flow_PerfOptimized_high" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2022" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xc7z010clg400-1" -objects $obj
set_property -name "incremental_checkpoint" -value "$proj_dir/PID_EXTERNAL_FINAL.srcs/utils_1/imports/synth_1/system_wrapper.dcp" -objects $obj
set_property -name "auto_incremental_checkpoint" -value "1" -objects $obj
set_property -name "strategy" -value "Flow_PerfOptimized_high" -objects $obj
set_property -name "steps.synth_design.args.directive" -value "PerformanceOptimized" -objects $obj
set_property -name "steps.synth_design.args.fsm_extraction" -value "one_hot" -objects $obj
set_property -name "steps.synth_design.args.keep_equivalent_registers" -value "1" -objects $obj
set_property -name "steps.synth_design.args.resource_sharing" -value "off" -objects $obj
set_property -name "steps.synth_design.args.no_lc" -value "1" -objects $obj
set_property -name "steps.synth_design.args.shreg_min_size" -value "5" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7z010clg400-1 -flow {Vivado Implementation 2022} -strategy "Performance_NetDelay_high" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Performance_NetDelay_high" [get_runs impl_1]
  set_property flow "Vivado Implementation 2022" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xc7z010clg400-1" -objects $obj
set_property -name "auto_rqs.directory" -value "C:/users/BenMillward/Desktop/Complete_setup/tmp/test_project/test_project.srcs/utils_1/imports/impl_1" -objects $obj
set_property -name "auto_incremental_checkpoint.directory" -value "C:/users/BenMillward/Desktop/Complete_setup/tmp/test_project/test_project.srcs/utils_1/imports/impl_1" -objects $obj
set_property -name "strategy" -value "Performance_NetDelay_high" -objects $obj
set_property -name "steps.place_design.args.directive" -value "ExtraNetDelay_high" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "AggressiveExplore" -objects $obj
set_property -name "steps.route_design.args.directive" -value "NoTimingRelaxation" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]
catch {
 if { $idrFlowPropertiesConstraints != {} } {
   set_param runs.disableIDRFlowPropertyConstraints $idrFlowPropertiesConstraints
 }
}

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
